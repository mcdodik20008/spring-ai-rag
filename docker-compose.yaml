version: "3.9"

services:
    spring-ai:
        build:
            context: .
            dockerfile: docker/Dockerfile
            # если нужен точный jar:
            # args:
            #   JAR_FILE: build/libs/spring-ai-rag-0.1.jar
        container_name: spring-ai-api
        environment:
            SPRING_PROFILES_ACTIVE: docker
            POSTGRES_HOSTNAME: pgvector
            OLLAMA_HOSTNAME: ollama
            # при необходимости:
            # SPRING_ZIPKIN_BASE_URL: http://zipkin:9411
            # JAVA_TOOL_OPTIONS: "-XX:MaxRAMPercentage=75 -Dfile.encoding=UTF-8"
        ports:
            - "8080:8080"
        depends_on:
            pgvector: { condition: service_healthy }
            ollama: { condition: service_healthy }
        restart: unless-stopped
        networks:
            - spring-ai-network

    pgvector:
        image: ankane/pgvector:latest
        container_name: pgvector
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: ragdb
        ports:
            - "5432:5432"
        volumes:
            - ./ci/init:/docker-entrypoint-initdb.d
            - pg_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres -d ragdb" ]
            interval: 10s
            timeout: 5s
            retries: 10
            start_period: 20s
        restart: unless-stopped
        networks:
            - spring-ai-network

    ollama:
        image: ollama/ollama:latest
        container_name: ollama
        restart: unless-stopped
        ports:
            - "11434:11434"
        networks:
            - spring-ai-network
        volumes:
            - ollama_data:/root/.ollama

    zipkin:
        image: openzipkin/zipkin:latest
        container_name: zipkin
        ports:
            - "9411:9411"
        environment:
            STORAGE_TYPE: mem
        restart: unless-stopped
        networks:
            - spring-ai-network

volumes:
    pg_data:
    ollama_data:

networks:
    spring-ai-network:
        driver: bridge
