package mcdodik.springai.config.chatmodel

object ChatModelTemplates {

    val GENERATE_CHUNKING_PROMPT_PROMPT = """
    Ты — мета-инженер LLM-промптов. Твоя задача — создать промпт, который будет использоваться для разбиения длинного текста на логически связанные смысловые блоки, пригодные для поиска по векторной базе (RAG).
    
    Контекст:
    - Пользователь работает с текстами в предметной области: {user_description}.
    - Нужно сгенерировать **инструкцию (промпт)** для другой модели, которая будет выделять chunk'и (блоки) из исходного текста.
    
    Требования к результату:
    1. Промпт должен быть написан от второго лица: "Ты интеллектуальный редактор..."
    2. Он должен адаптироваться под специфику предметной области (использовать её особенности, термины, логику изложения).
    3. Он должен включать рекомендации по стилю chunk'ов:
        - логическая завершённость;
        - объём от 300 до 800 токенов;
        - отсутствие дублирования и риторики;
        - сохранение аналитической и предметно-важной информации;
        - максимизация эффективности поиска в RAG.
    4. Промпт должен быть лаконичным, но полным. Без пояснений — только текст промпта.
    5. Стиль chunking должен быть **един для всех доменов**, но внутри адаптирован под область (например, "для судебных решений: выделяй вводную, мотивировочную и резолютивную части").
    
    Вход:
    - Название предметной области: {domain_name}
    - Описание: {user_description}
    
    Выход:
    - Один промпт (текстовая инструкция), соответствующий стилю: "Ты интеллектуальный редактор..."
    
    Пример:
    Если вход: "судебные решения", то промпт может содержать: "выделяй вводную, мотивировочную и резолютивную части", "убирай формальности и номера дел", "сохраняй юридически значимые формулировки".
    
    Сгенерируй промпт для области "{domain_name}".
""".trimIndent()

    val EXTRACT_CHUNKS_PROMPT = """
    Ты интеллектуальный редактор, готовящий длинный текст для поиска по векторной базе. 
    Твоя задача: 
        1. Выдели осмысленные смысловые блоки (темы, аргументы, тезисы, выводы). 
        2. Каждый блок должен быть самодостаточным — с ясной мыслью. 
        3. Каждый блок начинай с новой строки, а все остальное пиши в одну строку. 
        4. Информация должна быть сгруппирована так, что бы максимизировать коэффициент при поиске RAG 
        5. Не стоит выделять больше 15-20 блоков 
        6. Отправь только смысловые блоки без другого текста и нумерации блоков 
        7. Блок должен быть 300-800 токенов
        8. Используй релевантные термины из исходного текста — философские понятия, имена, категории — и сохраняй их контекстно связанной группой. Это увеличит точность RAG-поиска.
        9. Убирай вводные и дублирующие фразы. Каждый блок должен содержать только значимую и аналитическую информацию, без риторики.
        11. Один блок должен быть логически целостным: если в нём анализируется один философ или концепция — не смешивай его с другими без необходимости.
""".trimIndent()

    val RAG_PROMPT_TEMPLATE = """
    Ты интеллектуальный помощник, отвечающий на вопросы строго на основе предоставленного контекста.

    Ниже приведены краткие сводки оригинальных документов:
    -----
    {doc_summary}
    -----

    Также предоставлены фрагменты текста, найденные по смыслу:
    -----
    {context}
    -----

    Вопрос пользователя:
    {question}

    Инструкция:
    - Используй как сводки, так и фрагменты текста для ответа.
    - Не выдумывай факты. Если чего-то нет в контексте — скажи честно.
    - Отвечай на том же языке, на котором задан вопрос.
    - Избегай повторений, говори чётко и по делу.
    - Если есть несколько возможных интерпретаций — укажи их.
    - Отметай явно не подходящие по смыслу идеи.
    
    Ответ:
""".trimIndent()


}