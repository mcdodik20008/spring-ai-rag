spring:
  application:
    name: spring-ai
  datasource:
    url: jdbc:postgresql://localhost:5432/${POSRGRES_DB_NAME:ragdb}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:-1}
      max-request-size: ${MAX_REQUEST_SIZE:-1}
      enabled: true
  web:
    resources:
      add-mappings: false

  ai:
    chat:
      advisors:
        - bean: simpleLoggerAdvisor
        - bean: strictContextAdvisor
    ollama:
      embedding:
        model: ${OLLAMA_EMBEDDING_MODEL:nomic-embed-text}
        options:
          num-ctx: 8192
      base-url: http://localhost:11434
      chat:
        options:
          model: ${OLLAMA_CHAT_MODEL:owl/t-lite} #phi3:mini} #owl/t-lite}
    vectorstore:
      pgvector:
        initialize-schema: false
mybatis:
  mapper-locations: classpath*:db/*.xml
  type-handlers-package: classpath*:mcdodik.springai.rag.db

openrouter:
  model: ${OPENROUTER_MODEL:google/gemma-3-4b-it:free}
  api-key: ${OPENROUTER_API_KEY}

logging:
  level:
    sql: debug
    web: debug
